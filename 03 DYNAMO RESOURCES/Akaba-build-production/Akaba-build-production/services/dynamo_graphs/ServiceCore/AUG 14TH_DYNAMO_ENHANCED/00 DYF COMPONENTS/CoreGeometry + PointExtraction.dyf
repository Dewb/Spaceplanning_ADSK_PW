<Workspace Version="0.8.0.1233" X="-1249.60869626063" Y="-310.849285058683" zoom="0.701570974256241" Name="CoreGeometry + PointExtraction" ID="43bb0427-f218-4d6c-b3f5-daded8d41edb" Description="Builds the 3d core geometries and exports the two opposite diagonal points of relevant core elements" Category="Service Core Modeller">
  <NamespaceResolutionMap>
    <ClassMap partialName="Point" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Rectangle.Points[0]" resolvedName="Autodesk.DesignScript.Geometry.Rectangle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Rectangle" resolvedName="Autodesk.DesignScript.Geometry.Rectangle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Point.Z" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Vector" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Curve" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Curve.reverse" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Vector.ZAxis" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Nodes.CodeBlockNodeModel guid="3f7ae77e-d004-4698-8aca-779a99ce6cf7" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="252.473572589219" y="308.725564589523" isVisible="false" isUpstreamVisible="true" lacing="Disabled" CodeText="a[1..2];" ShouldFocus="false" />
    <Dynamo.Nodes.DSFunction guid="a44c1f79-d0fb-4cd6-ab02-b79636699896" type="Dynamo.Nodes.DSFunction" nickname="List.Transpose" x="396.32421453212" y="309.455779458997" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="DSCoreNodes.dll" function="DSCore.List.Transpose@var[]..[]" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="230c813e-1bea-428a-88bc-a530e00b9e93" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="250" y="394.57946956456" isVisible="false" isUpstreamVisible="true" lacing="Disabled" CodeText="b = {a[0]};" ShouldFocus="false" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="761b4218-506e-44a6-99e3-71338c789035" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="254.362953285559" y="485.105410905745" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="Vector.ZAxis();&#xA;h=100;" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="4b5b1521-3899-4cea-ad3d-289ba90480b1" type="DSIronPythonNode.PythonNode" nickname="Variable height : Elevators" x="687.14183504408" y="351.587830132552" isVisible="false" isUpstreamVisible="false" lacing="Disabled" inputcount="3">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

floorsList		=	IN[0]
keyFloorsList	=	IN[1]
elevListList	=	IN[2]

def elevExtruder():
	extruded=[]
	keyFloors.reverse()
	p1		=	Point.ByCoordinates(0,0,0);
	p2		=	Point.ByCoordinates(0,0,100);
	vec		=	Vector.ByTwoPoints(p1,p2)
	for i in range(len(elevList)):
		flr = floors[keyFloors[i]]
		cen = flr.EndPoint
		zVal= cen.Z
		crv = elevList[i]
		geom=[]
		for j in range(len(crv)):
			ext	=	Curve.ExtrudeAsSolid(crv[j],vec,zVal)		
			geom.append(ext)		
		extruded.append(geom)
	return extruded

finExt=[]
for i in range(len(elevListList)):
	floors = floorsList[i]	
	keyFloors = keyFloorsList[i]
	elevList = elevListList[i]
	extL=[]
	for j in range(len(elevList)):	
		keyFloors = keyFloorsList[i][j]
		elevList = elevListList[i][j]	
		ext = elevExtruder()
		extL.append(ext)
	finExt.append(extL)


#Assign your output to the OUT variable
OUT = finExt#finExt</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="15e38cf0-d672-462e-95a9-28f2c7f7cf28" type="DSIronPythonNode.PythonNode" nickname="Extruded Tech Rooms" x="687.758009563799" y="235.27993404191" isVisible="false" isUpstreamVisible="false" lacing="Disabled" inputcount="2">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

floorsList		=	IN[0]
techRoomsList	=	IN[1]



def extruder():
	extruded=[]
	for i in range(len(techRooms)):
		flr = floors[-1]
		cen = flr.EndPoint
		zVal= cen.Z
		crv = techRooms[i]
		extN = crv.Extrude(zVal)
		extruded.append(extN)
	return extruded

finExt = []
heightlist=[]
for i in range(len(techRoomsList)):
	techRoomsL = techRoomsList[i]
	floors = floorsList[i]
	flr = floors[-1]	
	cen = flr.EndPoint
	zVal= cen.Z
	heightL=[]
	for j in range(len(techRoomsL)):		
		techRooms = techRoomsL[j]
		extruded=[]
		for k in range(len(techRooms)):
			techR = techRooms[k]
			
			extN = techR.ExtrudeAsSolid(zVal)
			extruded.append(extN)
			heightL.append(zVal)
		finExt.append(extruded)
	heightlist.append(heightL)
		
		
#Assign your output to the OUT variable
OUT = finExt,heightlist
</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="83609d08-0b98-4ee5-92ba-24088c5ef333" type="DSIronPythonNode.PythonNode" nickname="LowLevel Restrms Extruder" x="683.234363090209" y="90.164815943599" isVisible="false" isUpstreamVisible="true" lacing="Disabled" inputcount="3">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

keyFloorList = IN[0]
restrmList = IN[1]
floorList = IN[2]


#to compute the lower lvl restrm spaces------------------------------
def restrmLowLvlExtruder(keyFloorList,restrmL,floorList):
	extruded = []
	p1		=	Point.ByCoordinates(0,0,0);
	p2		=	Point.ByCoordinates(0,0,100);
	vec		=	Vector.ByTwoPoints(p1,p2)
	for i in range(len(keyFloorList)):
		key1 = keyFloorList[i]
		floorL = floorList[i]
		rest1 = restrmL[i]
		extF=[]
		for j in range(len(key1)):
			key2 = key1[j]
			rest2 = rest1[j]
			floor = floorL[key2[0]]
			zVal = floor.Center().Z
			ext1 = Curve.ExtrudeAsSolid(rest2,vec,zVal)
			extF.append(ext1)
			#extF.append(ext2)
		extruded.append(extF)			
			
	return extruded
#--------------------------------------------------------------------
extF=[]
for i in range(len(restrmList)):
	restrmL = restrmList[i]
	ext = restrmLowLvlExtruder(keyFloorList,restrmL,floorList)
	extF.append(ext)

#Assign your output to the OUT variable
OUT =extF</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DSFunction guid="76089e32-30f0-4c82-a481-ef495877bd23" type="Dynamo.Nodes.DSFunction" nickname="FullServiceCoreBlock Extruded" x="687.787454941399" y="636.02887646345" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@Autodesk.DesignScript.Geometry.Vector,double">
      <PortInfo index="2" default="True" />
    </Dynamo.Nodes.DSFunction>
    <Dynamo.Nodes.CodeBlockNodeModel guid="22cb0300-14af-4bfe-936d-d6f1886020ca" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Height zVal" x="698.739467813179" y="543.805129830809" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a[1];" ShouldFocus="false" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="b9bbc280-b0f3-4b9e-af9a-c27b8d9189bb" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="687.332708581552" y="468.062410123956" isVisible="false" isUpstreamVisible="true" lacing="Disabled" CodeText="a[0];" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="5c646801-8bca-4705-8034-a184b3262925" type="DSIronPythonNode.PythonNode" nickname="Key Floorplates Finder" x="267.807053634089" y="582.426655104591" isVisible="false" isUpstreamVisible="true" lacing="Disabled" inputcount="3">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

floorList = IN[0]
keyFloorList = IN[1]
elevatorBanksList = IN[2]

#given an input elevator lists it will return the bouding rectangle volume-------------------------------------------------------------------------------
def boudingRecMaker(elevList):
	boundingBox = BoundingBox.ByGeometry(elevList)
	cuboid = boundingBox.ToCuboid()
	cubLines = cuboid.Edges
	
	p1 = cubLines[0].StartVertex.PointGeometry;
	p2 = cubLines[0].EndVertex.PointGeometry;
	p3 = cubLines[2].StartVertex.PointGeometry;
	p4 = cubLines[2].EndVertex.PointGeometry;
	
	boundingRec = Rectangle.ByCornerPoints(p1,p2,p3,p4)
	
	return boundingRec
#--------------------------------------------------------------------------------------------------------------------------------------------------------

# places the bounding boxes at the selected elev banks dropped-------------------------------------------------------------------------------------------
def restroomPlacer():
	restRmBlocks = []
	translatedElevListFinal = translateElevators(elevatorBanksList,floorList,keyFloorList)
	for i in range(len(translatedElevListFinal)):
		rest1 = []
		elev1 = translatedElevListFinal[i]
		for j in range(len(elev1)):	
			rest2 =[]		
			elev2 = elev1[j]
			for k in range(len(elev2)):
				if k == 0 : continue
				elev3 = elev2[k]
				boundingRestrms = boudingRecMaker(elev3)
				area = boundingRestrms.Width*boundingRestrms.Height
				if area &lt; 2: continue
				rest2.append(boundingRestrms)
			rest1.append(rest2)
		restRmBlocks.append(rest1)	
	return restRmBlocks,translatedElevListFinal
#--------------------------------------------------------------------------------------------------------------------------------------------------------





#function to translate the elev banks to the key floors plates in sequence--------------------------------
def translateElevators(elevatorBanksList,floorList,keyFloorList):
	translatedElevListFinal = []
	floorSelectedListFinal=[]
	placeforRestroomList =[]
	
	p1		=	Point.ByCoordinates(0,0,0);
	p2		=	Point.ByCoordinates(0,0,100);
	vec1		=	Vector.ByTwoPoints(p1,p2)
	
	for i in range(len(elevatorBanksList)):	
		baseFloor = floorList[i][0]
		basePt = baseFloor.Center()	
		floorL = floorList[i]
		keyFloorL = keyFloorList[i]
		floorSelectedList=[]
		translatedElevList = []
		elevatorBanksL = elevatorBanksList[i]
		for j in range(len(elevatorBanksL)):
			floorSelectedL=[]
			translatedElevL=[]
			keys = keyFloorL[j]
			keys.reverse()
			elevatorBanks = elevatorBanksL[j]
			for k in range(len(elevatorBanks)):				
				elevBank = elevatorBanks[k]
				index = keys[k]
				floor = floorL[index]
				zPt = floor.Center()
				vec = Vector.ByTwoPoints(basePt,zPt)
				elevL=[]
				for l in range(len(elevBank)):
					elev = elevBank[l]
					elevBankNew = elev.Translate(vec)	
					elevL.append(elevBankNew)
				translatedElevL.append(elevL)
				floorSelectedL.append(floor)
			translatedElevList.append(translatedElevL)
			floorSelectedList.append(floorSelectedL)
		translatedElevListFinal.append(translatedElevList)
		floorSelectedListFinal.append(floorSelectedList)	
	return translatedElevListFinal
#---------------------------------------------------------------------------------------------------------



#Assign your output to the OUT variable
OUT = restroomPlacer()</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DSFunction guid="40a308bb-5979-45ac-8b47-e4feefeaa748" type="Dynamo.Nodes.DSFunction" nickname="Face.Vertices" x="976.589757216589" y="531.40001297735" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Face.Vertices" />
    <Dynamo.Nodes.DSFunction guid="5e0291c5-9829-4571-a02a-a992ea65f7ae" type="Dynamo.Nodes.DSFunction" nickname="Face.Vertices" x="971.6343725267" y="338.127936241957" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Face.Vertices" />
    <Dynamo.Nodes.DSFunction guid="9ee84e12-1732-45bf-81c9-8009db30f0b5" type="Dynamo.Nodes.DSFunction" nickname="Face.Edges" x="979.07948338299" y="439.99791493295" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Face.Edges" />
    <Dynamo.Nodes.DSFunction guid="ba1411c5-7f1e-4e72-8593-d2569f2fce6d" type="Dynamo.Nodes.DSFunction" nickname="Face.Vertices" x="972.9081083248" y="251.249443933811" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Face.Vertices" />
    <DSIronPythonNode.PythonNode guid="4401e4d7-f6d0-4dd4-8cab-d395565d2e8e" type="DSIronPythonNode.PythonNode" nickname="Relocated Toilet Extruder" x="688.844734173319" y="767.934124074735" isVisible="false" isUpstreamVisible="true" lacing="Disabled" inputcount="3">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN


toiletRecList = IN[0][0]
keyFloorList = IN[1]
floorList = IN[2]


def keyFloorCleaner(keyFloorList):
	keyFloorCleanedList = []
	for i in range(len(keyFloorList)):
		key1 = keyFloorList[i]
		ext1 = []
		for j in range(len(key1)):
			key2 = key1[j]
			ext2 =[]			
			for k in range(len(key2)):
				key3 = key2[k]
				ext2.append(key3)
			ext1.append(ext2)
		keyFloorCleanedList.append(ext1)			
	return keyFloorCleanedList


#to compute the extrusion height for the toilet rect blocks-----------------------------------------------------------------------------
def restroomExtruder(toiletRecList,keyL):
	keyFloorList = keyFloorCleaner(keyL)
	restRmExtruded = []
	testF=[]
	p1		=	Point.ByCoordinates(0,0,0);
	p2		=	Point.ByCoordinates(0,0,100);
	vec		=	Vector.ByTwoPoints(p1,p2)
	for i in range(len(toiletRecList)):
		floorL = floorList[i]
		toil1 = toiletRecList[i]
		key1 = keyFloorList[i]
		ext1 = []
		test1=[]
		for j in range(len(toil1)):
			
			toil2 = toil1[j]
			key2 = key1[j]
			toil2.reverse()
			ext2 =[]
			test1.append(toil2)
			for k in range(len(toil2)):
				toil3 = toil2[k]
				key3 = key2[k]
				keyA = key2[k]
				keyB = key2[k+1]
				key3 = keyB - keyA 
				floor = floorL[key3]
				
				flrA = floorL[keyA]
				flrB = floorL[keyB]
				
				zVal = flrB.EndPoint.Z - flrA.EndPoint.Z				
				ext	=	Curve.ExtrudeAsSolid(toil3,vec,zVal)
				ext2.append(ext)
			ext1.append(ext2)
		testF.append(test1)
		restRmExtruded.append(ext1)
		
				
				
	return restRmExtruded,testF
#---------------------------------------------------------------------------------------------------------------------------------------

#Assign your output to the OUT variable
OUT = restroomExtruder(toiletRecList,keyFloorList)
#OUT = keyFloorCleaner(keyFloorList)</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.CodeBlockNodeModel guid="10c07ad0-3ffe-4392-98e1-c9158e4e847e" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="706.512547287779" y="904.320522742415" isVisible="false" isUpstreamVisible="true" lacing="Disabled" CodeText="a[0];" ShouldFocus="false" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="ab827ba0-0590-4331-a29c-ed300274c4b4" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="File Location" x="1231.67498686659" y="429.266398316725" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a={&quot;c:\write_Elevators.csv&quot;};" ShouldFocus="false" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="c985e7f9-4e8a-47e6-83bc-a0a8baa84663" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="File Location" x="1229.66589245099" y="336.245826999884" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a={&quot;c:\write_ServiceModule.csv&quot;};" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="1a90a912-b580-4a0c-910a-387bed0a49d9" type="DSIronPythonNode.PythonNode" nickname="All Points " x="1460.94023322389" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

vertexList = IN[0]
tupleList = []
for i in range(len(vertexList)):
	ver = vertexList[i]
	for j in range(len(ver)):
		verO = ver[j]
		for k in range(len(verO)):
			verN = verO[k]
			for l in range(len(verN)):
				verM = verN[l]
				for m in range(len(verM)):				
					tup = (verM[m].PointGeometry.X,verM[m].PointGeometry.Y,verM[m].PointGeometry.Z)
					tupleList.append(tup)


		


#Assign your output to the OUT variable
OUT = tupleList</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="75292edc-bf45-44c6-95e6-31ac6d95781a" type="DSIronPythonNode.PythonNode" nickname="Two Diagonal Point Finder" x="1458.42873713299" y="84.3859277660399" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

vertexList = IN[0]
tupleList = []
for i in range(len(vertexList)):
	ver = vertexList[i]
	for j in range(len(ver)):
		verO = ver[j]
		for k in range(len(verO)):
			verN = verO[k]
			for l in range(len(verN)):
				verM = verN[l]				
				tup = (verM[0].PointGeometry.X,verM[0].PointGeometry.Y,verM[0].PointGeometry.Z)
				tupleList.append(tup)
				tup = (verM[7].PointGeometry.X,verM[7].PointGeometry.Y,verM[7].PointGeometry.Z)
				tupleList.append(tup)


		


#Assign your output to the OUT variable
OUT = tupleList</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="ebe13991-ba54-4712-b765-9429af12f092" type="DSIronPythonNode.PythonNode" nickname="All Points " x="1414.31016081159" y="594.798292459722" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

vertexList = IN[0]
tupleList = []
for i in range(len(vertexList)):
	ver = vertexList[i]
	for j in range(len(ver)):
		verM = ver[j]
		for m in range(len(verM)):							
			tup = (verM[m].PointGeometry.X,verM[m].PointGeometry.Y,verM[m].PointGeometry.Z)
			tupleList.append(tup)


		


#Assign your output to the OUT variable
OUT = tupleList</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="b22d67b0-a9fa-4a40-a59f-9fd9358e2ac5" type="DSIronPythonNode.PythonNode" nickname="Two Diagonal Point Finder" x="1413.12413583899" y="681.777172895719" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

vertexList = IN[0]
tupleList = []
for i in range(len(vertexList)):
	ver = vertexList[i]
	for j in range(len(ver)):
		verM = ver[j]
		for k in range(len(verM)):						
			tup = (verM[0].PointGeometry.X,verM[0].PointGeometry.Y,verM[0].PointGeometry.Z)
			tupleList.append(tup)
			tup = (verM[7].PointGeometry.X,verM[7].PointGeometry.Y,verM[7].PointGeometry.Z)
			tupleList.append(tup)


		


#Assign your output to the OUT variable
OUT = tupleList</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="cd920b75-6371-4e3d-ba89-aff0ec5cd025" type="DSIronPythonNode.PythonNode" nickname="Point Creator" x="1719.66408494569" y="70.1769068474209" isVisible="false" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

units = IN[0]
ptList = []
for i in range(len(units)):
	cod = units[i]
	pt = Point.ByCoordinates(cod[0],cod[1],cod[2])
	ptList.append(pt)

#Assign your output to the OUT variable
OUT = ptList</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DSFunction guid="5d5f881c-631f-43a4-b321-eae00b5edbe5" type="Dynamo.Nodes.DSFunction" nickname="Edge.CurveGeometry" x="1641.58729275119" y="386.102196614651" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Edge.CurveGeometry" />
    <DSIronPythonNode.PythonNode guid="e30d6d6b-9fac-4e1b-a695-0cb41ebba68e" type="DSIronPythonNode.PythonNode" nickname="Point Creator" x="1650.42762759889" y="684.203886730685" isVisible="false" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

units = IN[0]
ptList = []
for i in range(len(units)):
	cod = units[i]
	pt = Point.ByCoordinates(cod[0],cod[1],cod[2])
	ptList.append(pt)

#Assign your output to the OUT variable
OUT = ptList</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DSFunction guid="ed3a0cc0-def6-499d-ba0e-1c2e368ab863" type="Dynamo.Nodes.DSFunction" nickname="CSV.WriteToFile" x="2239.94087732676" y="455.140544646513" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="DSCoreNodes.dll" function="DSCore.IO.CSV.WriteToFile@string,var[][]" />
    <Dynamo.Nodes.DSFunction guid="304ce576-5910-41bb-b18b-209a4a2e9089" type="Dynamo.Nodes.DSFunction" nickname="CSV.WriteToFile" x="2235.90121522026" y="320.3152771252" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="DSCoreNodes.dll" function="DSCore.IO.CSV.WriteToFile@string,var[][]" />
    <Dynamo.Nodes.Symbol guid="87f41f98-5773-49f7-888c-432ff420a843" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="techRoomsRestRooms" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="7900f4ce-3e79-4da2-8f29-120b61c2d65c" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="300" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="floorCurves" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="6e3c3f77-029e-488a-bfbc-2ad70b281709" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="449.096134499187" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="keyFloors" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="0813a640-2cfb-46a1-838e-7f29f7cf5480" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="600" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="elevBankLists" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="1027dab7-2b93-4f6b-883c-af139ef5b895" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="1200" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="serviceCoreCurve" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="9288b720-6b55-4856-9ecd-d21daef964ce" type="Dynamo.Nodes.Output" nickname="Output" x="2715.45221878673" y="83.8409251991324" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="elevatorsModel" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="6211693b-3342-49b4-ac3b-78045bcf259a" type="Dynamo.Nodes.Output" nickname="Output" x="2712.91158468979" y="150" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="lowLevelRestroomModel" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="a2a8d676-8e13-4d43-b37e-173255b04101" type="Dynamo.Nodes.Output" nickname="Output" x="2711.22675076763" y="218.285554775287" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="fullServiceCoreModel" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="bbd529d6-d82d-400d-a312-e5c2b68d2a4e" type="Dynamo.Nodes.Output" nickname="Output" x="2714.59641861195" y="287.463307439498" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="techRoomsModel" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="fd8c67ce-da1a-47fd-8dfb-832d74180dda" type="Dynamo.Nodes.Output" nickname="Output" x="2713.75400165087" y="353.221611331546" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="relocatedRestroomsModel" />
    </Dynamo.Nodes.Output>
    <DSCoreNodesUI.CreateList guid="8144ae67-7cd8-40e0-887a-e93eb5e071a9" type="DSCoreNodesUI.CreateList" nickname="List.Create" x="2468.74173020348" y="403.724828079327" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="2" />
    <Dynamo.Nodes.Output guid="33e826f7-639d-46f7-acf5-6f923b698b7f" type="Dynamo.Nodes.Output" nickname="Output" x="2717.76576723857" y="420.532891165696" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="floorSurface" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.CodeBlockNodeModel guid="ccc13d85-e265-4d36-8187-1c1fc62c49a5" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="280.590919555641" y="726.564346920653" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a[0];" ShouldFocus="false" />
    <Dynamo.Nodes.DSFunction guid="7e0b21da-cfc3-412b-889d-2e23f0bbaa2d" type="Dynamo.Nodes.DSFunction" nickname="Floor Surface" x="2245.62593950771" y="583.432388579685" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="79710bca-7f19-4cd3-b910-0c46c29d472b" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2.78890651869824" y="520.519327504065" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a[0];" ShouldFocus="false" />
    <Dynamo.Nodes.Output guid="784c7709-07bd-4804-aa7c-d85b704361ff" type="Dynamo.Nodes.Output" nickname="Output" x="2720.00010433593" y="677.420742796957" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="heightCores" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="10c9e31c-264e-4b61-a7eb-5e1173d2e6c2" type="Dynamo.Nodes.Output" nickname="Output" x="2719.36051520053" y="768.938588676863" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="outputCSVFiles" />
    </Dynamo.Nodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="3f7ae77e-d004-4698-8aca-779a99ce6cf7" start_index="0" end="83609d08-0b98-4ee5-92ba-24088c5ef333" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="a44c1f79-d0fb-4cd6-ab02-b79636699896" start_index="0" end="15e38cf0-d672-462e-95a9-28f2c7f7cf28" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="230c813e-1bea-428a-88bc-a530e00b9e93" start_index="0" end="a44c1f79-d0fb-4cd6-ab02-b79636699896" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="761b4218-506e-44a6-99e3-71338c789035" start_index="0" end="76089e32-30f0-4c82-a481-ef495877bd23" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="4b5b1521-3899-4cea-ad3d-289ba90480b1" start_index="0" end="9ee84e12-1732-45bf-81c9-8009db30f0b5" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="4b5b1521-3899-4cea-ad3d-289ba90480b1" start_index="0" end="5e0291c5-9829-4571-a02a-a992ea65f7ae" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="4b5b1521-3899-4cea-ad3d-289ba90480b1" start_index="0" end="9288b720-6b55-4856-9ecd-d21daef964ce" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="15e38cf0-d672-462e-95a9-28f2c7f7cf28" start_index="0" end="22cb0300-14af-4bfe-936d-d6f1886020ca" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="15e38cf0-d672-462e-95a9-28f2c7f7cf28" start_index="0" end="b9bbc280-b0f3-4b9e-af9a-c27b8d9189bb" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="83609d08-0b98-4ee5-92ba-24088c5ef333" start_index="0" end="6211693b-3342-49b4-ac3b-78045bcf259a" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="76089e32-30f0-4c82-a481-ef495877bd23" start_index="0" end="ba1411c5-7f1e-4e72-8593-d2569f2fce6d" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="76089e32-30f0-4c82-a481-ef495877bd23" start_index="0" end="a2a8d676-8e13-4d43-b37e-173255b04101" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="22cb0300-14af-4bfe-936d-d6f1886020ca" start_index="0" end="76089e32-30f0-4c82-a481-ef495877bd23" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="22cb0300-14af-4bfe-936d-d6f1886020ca" start_index="0" end="784c7709-07bd-4804-aa7c-d85b704361ff" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="b9bbc280-b0f3-4b9e-af9a-c27b8d9189bb" start_index="0" end="40a308bb-5979-45ac-8b47-e4feefeaa748" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="b9bbc280-b0f3-4b9e-af9a-c27b8d9189bb" start_index="0" end="bbd529d6-d82d-400d-a312-e5c2b68d2a4e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="5c646801-8bca-4705-8034-a184b3262925" start_index="0" end="4401e4d7-f6d0-4dd4-8cab-d395565d2e8e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="40a308bb-5979-45ac-8b47-e4feefeaa748" start_index="0" end="ebe13991-ba54-4712-b765-9429af12f092" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="40a308bb-5979-45ac-8b47-e4feefeaa748" start_index="0" end="b22d67b0-a9fa-4a40-a59f-9fd9358e2ac5" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="5e0291c5-9829-4571-a02a-a992ea65f7ae" start_index="0" end="1a90a912-b580-4a0c-910a-387bed0a49d9" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="5e0291c5-9829-4571-a02a-a992ea65f7ae" start_index="0" end="75292edc-bf45-44c6-95e6-31ac6d95781a" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="9ee84e12-1732-45bf-81c9-8009db30f0b5" start_index="0" end="5d5f881c-631f-43a4-b321-eae00b5edbe5" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="4401e4d7-f6d0-4dd4-8cab-d395565d2e8e" start_index="0" end="10c07ad0-3ffe-4392-98e1-c9158e4e847e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="10c07ad0-3ffe-4392-98e1-c9158e4e847e" start_index="0" end="fd8c67ce-da1a-47fd-8dfb-832d74180dda" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="ab827ba0-0590-4331-a29c-ed300274c4b4" start_index="0" end="ed3a0cc0-def6-499d-ba0e-1c2e368ab863" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="c985e7f9-4e8a-47e6-83bc-a0a8baa84663" start_index="0" end="304ce576-5910-41bb-b18b-209a4a2e9089" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="75292edc-bf45-44c6-95e6-31ac6d95781a" start_index="0" end="cd920b75-6371-4e3d-ba89-aff0ec5cd025" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="75292edc-bf45-44c6-95e6-31ac6d95781a" start_index="0" end="304ce576-5910-41bb-b18b-209a4a2e9089" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="b22d67b0-a9fa-4a40-a59f-9fd9358e2ac5" start_index="0" end="e30d6d6b-9fac-4e1b-a695-0cb41ebba68e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="b22d67b0-a9fa-4a40-a59f-9fd9358e2ac5" start_index="0" end="ed3a0cc0-def6-499d-ba0e-1c2e368ab863" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="ed3a0cc0-def6-499d-ba0e-1c2e368ab863" start_index="0" end="8144ae67-7cd8-40e0-887a-e93eb5e071a9" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="304ce576-5910-41bb-b18b-209a4a2e9089" start_index="0" end="8144ae67-7cd8-40e0-887a-e93eb5e071a9" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="87f41f98-5773-49f7-888c-432ff420a843" start_index="0" end="3f7ae77e-d004-4698-8aca-779a99ce6cf7" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="87f41f98-5773-49f7-888c-432ff420a843" start_index="0" end="230c813e-1bea-428a-88bc-a530e00b9e93" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="7900f4ce-3e79-4da2-8f29-120b61c2d65c" start_index="0" end="4b5b1521-3899-4cea-ad3d-289ba90480b1" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="7900f4ce-3e79-4da2-8f29-120b61c2d65c" start_index="0" end="15e38cf0-d672-462e-95a9-28f2c7f7cf28" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="7900f4ce-3e79-4da2-8f29-120b61c2d65c" start_index="0" end="83609d08-0b98-4ee5-92ba-24088c5ef333" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="7900f4ce-3e79-4da2-8f29-120b61c2d65c" start_index="0" end="5c646801-8bca-4705-8034-a184b3262925" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="7900f4ce-3e79-4da2-8f29-120b61c2d65c" start_index="0" end="4401e4d7-f6d0-4dd4-8cab-d395565d2e8e" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="7900f4ce-3e79-4da2-8f29-120b61c2d65c" start_index="0" end="7e0b21da-cfc3-412b-889d-2e23f0bbaa2d" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="6e3c3f77-029e-488a-bfbc-2ad70b281709" start_index="0" end="79710bca-7f19-4cd3-b910-0c46c29d472b" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="0813a640-2cfb-46a1-838e-7f29f7cf5480" start_index="0" end="ccc13d85-e265-4d36-8187-1c1fc62c49a5" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="1027dab7-2b93-4f6b-883c-af139ef5b895" start_index="0" end="76089e32-30f0-4c82-a481-ef495877bd23" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="8144ae67-7cd8-40e0-887a-e93eb5e071a9" start_index="0" end="10c9e31c-264e-4b61-a7eb-5e1173d2e6c2" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="ccc13d85-e265-4d36-8187-1c1fc62c49a5" start_index="0" end="5c646801-8bca-4705-8034-a184b3262925" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="ccc13d85-e265-4d36-8187-1c1fc62c49a5" start_index="0" end="4b5b1521-3899-4cea-ad3d-289ba90480b1" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="7e0b21da-cfc3-412b-889d-2e23f0bbaa2d" start_index="0" end="33e826f7-639d-46f7-acf5-6f923b698b7f" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="79710bca-7f19-4cd3-b910-0c46c29d472b" start_index="0" end="5c646801-8bca-4705-8034-a184b3262925" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="79710bca-7f19-4cd3-b910-0c46c29d472b" start_index="0" end="4b5b1521-3899-4cea-ad3d-289ba90480b1" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="79710bca-7f19-4cd3-b910-0c46c29d472b" start_index="0" end="83609d08-0b98-4ee5-92ba-24088c5ef333" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="79710bca-7f19-4cd3-b910-0c46c29d472b" start_index="0" end="4401e4d7-f6d0-4dd4-8cab-d395565d2e8e" end_index="1" portType="0" />
  </Connectors>
  <Notes />
</Workspace>