<Workspace Version="0.8.0.1233" X="-1269.85781583601" Y="58.7338112122609" zoom="0.808219866393029" Name="Shell Slicer" ID="0479ea0a-aee6-4031-bee9-ac6be2057d43" Description="Slices the input shell into floor plates and regular boxes" Category="ServiceCore New">
  <NamespaceResolutionMap>
    <ClassMap partialName="Point" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Rectangle.Points[0]" resolvedName="Autodesk.DesignScript.Geometry.Rectangle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Rectangle" resolvedName="Autodesk.DesignScript.Geometry.Rectangle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Point.Z" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Vector" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Curve" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Curve.reverse" resolvedName="Autodesk.DesignScript.Geometry.Curve" assemblyName="ProtoGeometry.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <DSCore.File.FileObject guid="ae031a5b-9de9-4f6a-800e-0eca30c28e1d" type="DSCore.File.FileObject" nickname="File.FromPath" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.DSFunction guid="49a23b80-37e7-4f5a-b2e1-9cfceaedbe45" type="Dynamo.Nodes.DSFunction" nickname="File.ReadText" x="410.126548361014" y="1.18461971764009" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="DSCoreNodes.dll" function="DSCore.IO.File.ReadText@var" />
    <Dynamo.Nodes.DSFunction guid="440277cb-83cc-42ca-9bbe-a618d89c8287" type="Dynamo.Nodes.DSFunction" nickname="STL.ByASCII" x="553.262647715164" y="2.36923943527972" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.STL.ByASCII@string" />
    <Dynamo.Nodes.DoubleInput guid="f72bfe75-a384-4e28-98eb-99033466f4fa" type="Dynamo.Nodes.DoubleInput" nickname="Number" x="597.90288461143" y="138.52336328284" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="0.5" />
    </Dynamo.Nodes.DoubleInput>
    <Dynamo.Nodes.DoubleInput guid="fe692e8e-720f-4226-9e90-da374bca3187" type="Dynamo.Nodes.DoubleInput" nickname="Number" x="600.092155808749" y="201.66338085493" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="3.5" />
    </Dynamo.Nodes.DoubleInput>
    <Dynamo.Nodes.DoubleInput guid="89e75d0d-ab7f-4977-aa70-0a45bf5d01f4" type="Dynamo.Nodes.DoubleInput" nickname="Level" x="600.174869973545" y="262.49804662997" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="1" />
    </Dynamo.Nodes.DoubleInput>
    <Dynamo.Nodes.DSFunction guid="dbaeb3af-3953-4fb0-8020-1e3fae7277fb" type="Dynamo.Nodes.DSFunction" nickname="STL.Mesh" x="709.632450443296" y="0.680023631219683" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.STL.Mesh" />
    <Dynamo.Nodes.DSFunction guid="e76965b8-764d-473f-be0a-2a016ef43976" type="Dynamo.Nodes.DSFunction" nickname="Shell.ByMesh" x="863.918938475782" y="0.985314955789818" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.Shell.ByMesh@Autodesk.DesignScript.Geometry.Mesh" />
    <Dynamo.Nodes.DSFunction guid="0a75e926-d0a1-42d2-8334-977a60b509c1" type="Dynamo.Nodes.DSFunction" nickname="GridBasis.BySize" x="813.524342216791" y="127.38182899928" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.GridBasis.BySize@double,double" />
    <Dynamo.Nodes.DoubleInput guid="0383accd-e1bd-4fb3-8591-5b5f38c85385" type="Dynamo.Nodes.DoubleInput" nickname="Number" x="1092.05895706866" y="67.4144573159797" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="0" />
    </Dynamo.Nodes.DoubleInput>
    <Dynamo.Nodes.DSFunction guid="50a68137-84bd-4996-a416-1b7d477c5a1b" type="Dynamo.Nodes.DSFunction" nickname="GridBasis.FloorHeight" x="1090.9109482544" y="219.11632712805" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.GridBasis.FloorHeight@int" />
    <Dynamo.Nodes.DSFunction guid="b08f829b-31d1-489b-ad7f-880e589446cd" type="Dynamo.Nodes.DSFunction" nickname="Shell.Height" x="1091.59714774766" y="133.08142504374" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.Shell.Height" />
    <DSCoreNodesUI.NumberRange guid="fb9ec609-9b1e-467f-80ef-7f8a305c62eb" type="DSCoreNodesUI.NumberRange" nickname="Number Range" x="1331.64253446184" y="61.68210760702" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.DSFunction guid="4d13ed54-38f5-4f03-936a-a6ebd0b68d03" type="Dynamo.Nodes.DSFunction" nickname="/" x="1333.17993878428" y="216.07871292194" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="" function="/@var[]..[],var[]..[]" />
    <DSIronPythonNode.PythonNode guid="b1d8dfcb-6c6e-479d-ba18-5dc953d4a76a" type="DSIronPythonNode.PythonNode" nickname="Shell Type" x="1329.03890846658" y="351.26062495919" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN


a = IN[0][-5]


a = int(a)


#Assign your output to the OUT variable
OUT = a</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DSFunction guid="9cef6297-360f-480d-aa7b-df774aba2b8c" type="Dynamo.Nodes.DSFunction" nickname="GridBasis.FloorHeight" x="1559.15295759492" y="85.3081956128899" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.GridBasis.FloorHeight@int" />
    <Dynamo.Nodes.DSFunction guid="7a0ac8e1-3019-429e-a6ba-640da945aba0" type="Dynamo.Nodes.DSFunction" nickname="Shell.GetFloorOutline" x="1853.88998229895" y="69.39647334858" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="D:\SUBHAJIT%20PROJECTS\WORK\00%20DYNAMO%20AUTOMATED%20STAIRCORE\3RD%20AUG\SINGLE%20WITH%20COLINS%20SLICER\stuffer.dll" function="stuffer.Shell.GetFloorOutline@double" />
    <Dynamo.Nodes.DSFunction guid="48ca79dd-c795-4e65-96a8-5a70adeb2900" type="Dynamo.Nodes.DSFunction" nickname="Flatten" x="1900.41743885711" y="184.73689859072" isVisible="false" isUpstreamVisible="true" lacing="Shortest" assembly="" function="Flatten@var[]..[]" />
    <DSIronPythonNode.PythonNode guid="e6ec7cac-4d6a-490c-9f88-9bccbd069129" type="DSIronPythonNode.PythonNode" nickname="Box Maker New" x="2066.19196493463" y="104.64205491141" isVisible="false" isUpstreamVisible="true" lacing="Disabled" inputcount="3">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
import math
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

polygonList = IN[0]
type = IN[1]
heightList = IN[2]

#last polygon is null, so take it off
del polygonList[-1]

srfAreaList=[]
selectedpolyList=[]
zHeightList=[]


#computes for all except type 4-----------------------------------------------------------------------------------------------
def boxFloorMaker4():	
	newpolygonList=[]
	poly1st = polygonList[0]
	srf0 = Surface.ByPatch(poly1st)
	area1st = srf0.Area
	# compute floor areas	
	for i in range(len(polygonList)):
		
		polygon = polygonList[i]
		srf = Surface.ByPatch(polygon)		
		area  = srf.Area
		if math.pow((area1st - area),2) &lt; 5 :continue 
		srfAreaList.append(area)
		newpolygonList.append(polygon)
		
	# select floors where area changes
	for i in range(len(srfAreaList)-1):
		areaCurrent = srfAreaList[i]
		
		areaNext = srfAreaList[i+1]
		areaSubtract = areaNext-areaCurrent
		if math.pow(areaSubtract,2) &lt; 5:
			pass
		else:
			selectedpolyList.append(newpolygonList[i])	
	selectedpolyList.append(newpolygonList[-1])
	
	#translate the selected floors to ground lvl
	newPolyList=[]
	zHeightList=[]
	
	for i in range(len(selectedpolyList)):
		selPolygon = selectedpolyList[i]
		pCenter = selPolygon.Center()
		pOrigin = Point.ByCoordinates(pCenter.X,pCenter.Y,0)		 
		vec = Vector.ByTwoPoints(pCenter,pOrigin)
		newPoly = selPolygon.Translate(vec)
					
		newPolyList.append(newPoly)
		zHeightList.append(pCenter.Z)	
		
	#trim the floors polygons to make individual blocks
	trimmedSrfList=[]
	perimeterList = []
	for i in range(len(newPolyList)-1):
		polyA = newPolyList[i]
		polyB = newPolyList[i+1]
		polyBSolid = polyB.ExtrudeAsSolid(Vector.ZAxis(),5)
		polyASrf = Surface.ByPatch(polyA)
		trimmedSurf = Surface.SubtractFrom(polyASrf,polyBSolid)
		trimmedSrfList.append(trimmedSurf)
		pass	
	trimmedSrfList.append(Surface.ByPatch(newPolyList[-1]))
	
	#just for type4
	polyBSolid = poly1st.ExtrudeAsSolid(Vector.ZAxis(),-5)
	polyASrf = trimmedSrfList[0][0]
	trimmedSurf = Surface.SubtractFrom(polyASrf,polyBSolid)
	trimmedSrfList[0] = trimmedSurf	
	
	newtrimmedList=[]
	newperimeterList = []
	
	
	# flatten the list
	for i in range(len(trimmedSrfList)):
		crv = trimmedSrfList[i]
		try :
			for j in range(len(crv)):
				newtrimmedList.append(crv[j])
				perim = crv[j].Perimeter
				newperimeterList.append(perim)
		except:
			newtrimmedList.append(crv)
			perim = crv.Perimeter
			newperimeterList.append(perim)
			
	#make floor curves for the individual blocks		
	trimmedCurvesList=[]
	ptList=[]
	rectangleList = []
	testL=[]
	for i in range(len(newtrimmedList)):
		srf = newtrimmedList[i]
		crvs = srf.PerimeterCurves()
		crvs = PolyCurve.ByJoinedCurves(crvs)
		testL.append(crvs)		

		#IF ERROR TRIGGER THESE DIST VALUES, BOTH WORKS
		dist= crvs.Length/4
		#dist= float(newperimeterList[i]/4)
		
		#pt1 = crvs.PointAtDistance(dist)
		pt2 = crvs.PointAtDistance(dist*2)
		pt4 = crvs.PointAtDistance(dist*3.999)
		pt1 = Point.ByCoordinates(pt2.X,pt4.Y)
		pt3 = Point.ByCoordinates(pt4.X,pt2.Y)
		#pt3 = crvs.PointAtDistance(dist*3)
		
		# make rectangles for the floor curves
		ptList.append((pt1,pt2,pt3,pt4))
		"""
		if type == 3:
			rec = Rectangle.ByCornerPoints(pt3,pt4,pt1,pt2)
		else:
		"""
		rec = Rectangle.ByCornerPoints(pt1,pt2,pt3,pt4)
		rectangleList.append(rec)
		trimmedCurvesList.append(crvs)
		
	if type == 3:
		tmp = rectangleList[1]
		tmp1 = zHeightList[1]
		zHeightList[1] = zHeightList[2]
		zHeightList[2] = tmp1
		rectangleList[1] = rectangleList[2]
		rectangleList[2] = tmp
	
	# make floor curves as rectangle objects
	newRecList = []
	boxRecList = []
	for i in range(len(rectangleList)):
		rec = rectangleList[i]
		boxRecList.append(rec)
		zHeight = zHeightList[i]
		newRecL=[]
		for j in range(len(heightList)):
			
			heightVal =  heightList[j]
			if zHeight &lt; heightVal : break		 
			vec = Vector.ZAxis()
			newRecs = rec.Translate(vec,heightVal)
			newRecL.append(newRecs)
		newRecList.append(newRecL)
	#return testL
	return boxRecList,newRecList
#-------------------------------------------------------------------------------------------------------------------------------------------------------



	
	
	

	
	
#computes for all except type 4-----------------------------------------------------------------------------------------------
def boxFloorMakerAll():	
	# compute floor areas	
	for i in range(len(polygonList)):
		polygon = polygonList[i]
		srf = Surface.ByPatch(polygon)
		area  = srf.Area
		srfAreaList.append(area)
		
	# select floors where area changes
	for i in range(len(srfAreaList)-1):
		areaCurrent = srfAreaList[i]
		areaNext = srfAreaList[i+1]
		areaSubtract = areaNext-areaCurrent
		if math.pow(areaSubtract,2) &lt; 5:
			pass
		else:
			selectedpolyList.append(polygonList[i])	
	selectedpolyList.append(polygonList[-1])
	
	#translate the selected floors to ground lvl
	newPolyList=[]
	zHeightList=[]
	for i in range(len(selectedpolyList)):
		selPolygon = selectedpolyList[i]
		pCenter = selPolygon.Center()
		pOrigin = Point.ByCoordinates(pCenter.X,pCenter.Y,0)		 
		vec = Vector.ByTwoPoints(pCenter,pOrigin)
		newPoly = selPolygon.Translate(vec)		
		newPolyList.append(newPoly)
		zHeightList.append(pCenter.Z)	
		
	#trim the floors polygons to make individual blocks
	trimmedSrfList=[]
	perimeterList = []
	for i in range(len(newPolyList)-1):
		polyA = newPolyList[i]
		polyB = newPolyList[i+1]
		polyBSolid = polyB.ExtrudeAsSolid(Vector.ZAxis(),5)
		polyASrf = Surface.ByPatch(polyA)
		trimmedSurf = Surface.SubtractFrom(polyASrf,polyBSolid)
		trimmedSrfList.append(trimmedSurf)
		pass	
	trimmedSrfList.append(Surface.ByPatch(newPolyList[-1]))
		
	newtrimmedList=[]
	newperimeterList = []
	
	# flatten the list
	for i in range(len(trimmedSrfList)):
		crv = trimmedSrfList[i]
		try :
			for j in range(len(crv)):
				newtrimmedList.append(crv[j])
				perim = crv[j].Perimeter
				newperimeterList.append(perim)
		except:
			newtrimmedList.append(crv)
			perim = crv.Perimeter
			newperimeterList.append(perim)
			
	#make floor curves for the individual blocks		
	trimmedCurvesList=[]
	ptList=[]
	rectangleList = []
	for i in range(len(newtrimmedList)):
		srf = newtrimmedList[i]
		crvs = srf.PerimeterCurves()
		crvs = PolyCurve.ByJoinedCurves(crvs)
	
		#IF ERROR TRIGGER THESE DIST VALUES, BOTH WORKS
		dist= crvs.Length/4
		#dist= float(newperimeterList[i]/4)
		
		#pt1 = crvs.PointAtDistance(dist)
		pt2 = crvs.PointAtDistance(dist*0)
		pt4 = crvs.PointAtDistance(dist*2)
		pt1 = Point.ByCoordinates(pt2.X,pt4.Y)
		pt3 = Point.ByCoordinates(pt4.X,pt2.Y)
		#pt3 = crvs.PointAtDistance(dist*3)
		
		# make rectangles for the floor curves
		ptList.append((pt1,pt2,pt3,pt4))
		"""
		if type == 3:
			rec = Rectangle.ByCornerPoints(pt3,pt4,pt1,pt2)
		else:
		"""
		rec = Rectangle.ByCornerPoints(pt1,pt2,pt3,pt4)
		rectangleList.append(rec)
		trimmedCurvesList.append(crvs)
		
	if type == 3:
		tmp = rectangleList[1]
		tmp1 = zHeightList[1]
		zHeightList[1] = zHeightList[2]
		zHeightList[2] = tmp1
		rectangleList[1] = rectangleList[2]
		rectangleList[2] = tmp
	
	# make floor curves as rectangle objects
	newRecList = []
	boxRecList = []
	for i in range(len(rectangleList)):
		rec = rectangleList[i]
		boxRecList.append(rec)
		zHeight = zHeightList[i]
		newRecL=[]
		for j in range(len(heightList)):
			
			heightVal =  heightList[j]
			if zHeight &lt; heightVal : break		 
			vec = Vector.ZAxis()
			newRecs = rec.Translate(vec,heightVal)
			newRecL.append(newRecs)
		newRecList.append(newRecL)
	
	return boxRecList,newRecList
#-------------------------------------------------------------------------------------------------------------------------------------------------------

# type 4 is O SHELL, so needs different treatment

if type == 4:
	out =boxFloorMaker4()
else :	
	out = boxFloorMakerAll()
	
			
	
	
	
	
#Assign your output to the OUT variable
#OUT = newPolyList,trimmedSrfList,zHeightList,newtrimmedList,newRecList,ptList
OUT = out</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.CodeBlockNodeModel guid="daaad192-491d-458e-ba0e-cd4d20eff158" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Floor Curves" x="2311.6594233778" y="456.62861429529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a[1];" ShouldFocus="false" />
    <Dynamo.Nodes.CodeBlockNodeModel guid="acf8c109-001f-4398-a3aa-f7eb169dbee6" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Box  Low Level" x="2309.98809697678" y="365.62238392372" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="a[0];" ShouldFocus="false" />
    <Dynamo.Nodes.Symbol guid="242ab8bb-1fe0-4403-95a2-60ee088ff513" type="Dynamo.Nodes.Symbol" nickname="Input" x="2.39999999999998" y="192.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="shellSTLPath" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="9b45cd0b-0a3a-4bbe-be0e-56055923a4a1" type="Dynamo.Nodes.Output" nickname="Output" x="2504.49965785851" y="474.638629544367" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="shellType" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="3d04553a-681b-41ea-8083-f99da033f8b2" type="Dynamo.Nodes.Output" nickname="Output" x="2507.75618361868" y="403.194877852998" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="floorMaker" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="a8cfe239-6028-451e-857a-90ad44f83151" type="Dynamo.Nodes.Output" nickname="Output" x="2504.49965785851" y="338.264177681964" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="boxMaker" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="82dede5f-f905-4401-ad7c-f87803999db3" type="Dynamo.Nodes.Output" nickname="Output" x="2505.92561615965" y="543.022027537199" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="shellMesh" />
    </Dynamo.Nodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="ae031a5b-9de9-4f6a-800e-0eca30c28e1d" start_index="0" end="49a23b80-37e7-4f5a-b2e1-9cfceaedbe45" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="49a23b80-37e7-4f5a-b2e1-9cfceaedbe45" start_index="0" end="440277cb-83cc-42ca-9bbe-a618d89c8287" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="440277cb-83cc-42ca-9bbe-a618d89c8287" start_index="0" end="dbaeb3af-3953-4fb0-8020-1e3fae7277fb" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="f72bfe75-a384-4e28-98eb-99033466f4fa" start_index="0" end="0a75e926-d0a1-42d2-8334-977a60b509c1" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="fe692e8e-720f-4226-9e90-da374bca3187" start_index="0" end="0a75e926-d0a1-42d2-8334-977a60b509c1" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="89e75d0d-ab7f-4977-aa70-0a45bf5d01f4" start_index="0" end="50a68137-84bd-4996-a416-1b7d477c5a1b" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="dbaeb3af-3953-4fb0-8020-1e3fae7277fb" start_index="0" end="e76965b8-764d-473f-be0a-2a016ef43976" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="dbaeb3af-3953-4fb0-8020-1e3fae7277fb" start_index="0" end="82dede5f-f905-4401-ad7c-f87803999db3" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e76965b8-764d-473f-be0a-2a016ef43976" start_index="0" end="b08f829b-31d1-489b-ad7f-880e589446cd" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e76965b8-764d-473f-be0a-2a016ef43976" start_index="0" end="7a0ac8e1-3019-429e-a6ba-640da945aba0" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="0a75e926-d0a1-42d2-8334-977a60b509c1" start_index="0" end="50a68137-84bd-4996-a416-1b7d477c5a1b" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="0a75e926-d0a1-42d2-8334-977a60b509c1" start_index="0" end="9cef6297-360f-480d-aa7b-df774aba2b8c" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="0383accd-e1bd-4fb3-8591-5b5f38c85385" start_index="0" end="fb9ec609-9b1e-467f-80ef-7f8a305c62eb" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="50a68137-84bd-4996-a416-1b7d477c5a1b" start_index="0" end="fb9ec609-9b1e-467f-80ef-7f8a305c62eb" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="50a68137-84bd-4996-a416-1b7d477c5a1b" start_index="0" end="4d13ed54-38f5-4f03-936a-a6ebd0b68d03" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="b08f829b-31d1-489b-ad7f-880e589446cd" start_index="0" end="fb9ec609-9b1e-467f-80ef-7f8a305c62eb" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="fb9ec609-9b1e-467f-80ef-7f8a305c62eb" start_index="0" end="4d13ed54-38f5-4f03-936a-a6ebd0b68d03" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="4d13ed54-38f5-4f03-936a-a6ebd0b68d03" start_index="0" end="9cef6297-360f-480d-aa7b-df774aba2b8c" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="b1d8dfcb-6c6e-479d-ba18-5dc953d4a76a" start_index="0" end="e6ec7cac-4d6a-490c-9f88-9bccbd069129" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="b1d8dfcb-6c6e-479d-ba18-5dc953d4a76a" start_index="0" end="9b45cd0b-0a3a-4bbe-be0e-56055923a4a1" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="9cef6297-360f-480d-aa7b-df774aba2b8c" start_index="0" end="7a0ac8e1-3019-429e-a6ba-640da945aba0" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="9cef6297-360f-480d-aa7b-df774aba2b8c" start_index="0" end="e6ec7cac-4d6a-490c-9f88-9bccbd069129" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="7a0ac8e1-3019-429e-a6ba-640da945aba0" start_index="0" end="48ca79dd-c795-4e65-96a8-5a70adeb2900" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="48ca79dd-c795-4e65-96a8-5a70adeb2900" start_index="0" end="e6ec7cac-4d6a-490c-9f88-9bccbd069129" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e6ec7cac-4d6a-490c-9f88-9bccbd069129" start_index="0" end="daaad192-491d-458e-ba0e-cd4d20eff158" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e6ec7cac-4d6a-490c-9f88-9bccbd069129" start_index="0" end="acf8c109-001f-4398-a3aa-f7eb169dbee6" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="daaad192-491d-458e-ba0e-cd4d20eff158" start_index="0" end="3d04553a-681b-41ea-8083-f99da033f8b2" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="acf8c109-001f-4398-a3aa-f7eb169dbee6" start_index="0" end="a8cfe239-6028-451e-857a-90ad44f83151" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="242ab8bb-1fe0-4403-95a2-60ee088ff513" start_index="0" end="ae031a5b-9de9-4f6a-800e-0eca30c28e1d" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="242ab8bb-1fe0-4403-95a2-60ee088ff513" start_index="0" end="b1d8dfcb-6c6e-479d-ba18-5dc953d4a76a" end_index="0" portType="0" />
  </Connectors>
  <Notes />
</Workspace>